export default {
  abi: [
    {
      inputs: [],
      stateMutability: "nonpayable",
      type: "constructor",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "target",
          type: "address",
        },
      ],
      name: "AddressEmptyCode",
      type: "error",
    },
    {
      inputs: [],
      name: "ECDSAInvalidSignature",
      type: "error",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "length",
          type: "uint256",
        },
      ],
      name: "ECDSAInvalidSignatureLength",
      type: "error",
    },
    {
      inputs: [
        {
          internalType: "bytes32",
          name: "s",
          type: "bytes32",
        },
      ],
      name: "ECDSAInvalidSignatureS",
      type: "error",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "implementation",
          type: "address",
        },
      ],
      name: "ERC1967InvalidImplementation",
      type: "error",
    },
    {
      inputs: [],
      name: "ERC1967NonPayable",
      type: "error",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "spender",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "allowance",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "needed",
          type: "uint256",
        },
      ],
      name: "ERC20InsufficientAllowance",
      type: "error",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "sender",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "balance",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "needed",
          type: "uint256",
        },
      ],
      name: "ERC20InsufficientBalance",
      type: "error",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "approver",
          type: "address",
        },
      ],
      name: "ERC20InvalidApprover",
      type: "error",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "receiver",
          type: "address",
        },
      ],
      name: "ERC20InvalidReceiver",
      type: "error",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "sender",
          type: "address",
        },
      ],
      name: "ERC20InvalidSender",
      type: "error",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "spender",
          type: "address",
        },
      ],
      name: "ERC20InvalidSpender",
      type: "error",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "deadline",
          type: "uint256",
        },
      ],
      name: "ERC2612ExpiredSignature",
      type: "error",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "signer",
          type: "address",
        },
        {
          internalType: "address",
          name: "owner",
          type: "address",
        },
      ],
      name: "ERC2612InvalidSigner",
      type: "error",
    },
    {
      inputs: [],
      name: "FailedInnerCall",
      type: "error",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "account",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "currentNonce",
          type: "uint256",
        },
      ],
      name: "InvalidAccountNonce",
      type: "error",
    },
    {
      inputs: [],
      name: "InvalidInitialization",
      type: "error",
    },
    {
      inputs: [],
      name: "NotInitializing",
      type: "error",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address",
        },
      ],
      name: "OwnableInvalidOwner",
      type: "error",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "account",
          type: "address",
        },
      ],
      name: "OwnableUnauthorizedAccount",
      type: "error",
    },
    {
      inputs: [],
      name: "UUPSUnauthorizedCallContext",
      type: "error",
    },
    {
      inputs: [
        {
          internalType: "bytes32",
          name: "slot",
          type: "bytes32",
        },
      ],
      name: "UUPSUnsupportedProxiableUUID",
      type: "error",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "spender",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "value",
          type: "uint256",
        },
      ],
      name: "Approval",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [],
      name: "EIP712DomainChanged",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "uint64",
          name: "version",
          type: "uint64",
        },
      ],
      name: "Initialized",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "previousOwner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "newOwner",
          type: "address",
        },
      ],
      name: "OwnershipTransferred",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "value",
          type: "uint256",
        },
      ],
      name: "Transfer",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "implementation",
          type: "address",
        },
      ],
      name: "Upgraded",
      type: "event",
    },
    {
      inputs: [],
      name: "DOMAIN_SEPARATOR",
      outputs: [
        {
          internalType: "bytes32",
          name: "",
          type: "bytes32",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "UPGRADE_INTERFACE_VERSION",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          internalType: "address",
          name: "spender",
          type: "address",
        },
      ],
      name: "allowance",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "spender",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "value",
          type: "uint256",
        },
      ],
      name: "approve",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "account",
          type: "address",
        },
      ],
      name: "balanceOf",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "value",
          type: "uint256",
        },
      ],
      name: "burn",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "account",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "value",
          type: "uint256",
        },
      ],
      name: "burnFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "decimals",
      outputs: [
        {
          internalType: "uint8",
          name: "",
          type: "uint8",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "eip712Domain",
      outputs: [
        {
          internalType: "bytes1",
          name: "fields",
          type: "bytes1",
        },
        {
          internalType: "string",
          name: "name",
          type: "string",
        },
        {
          internalType: "string",
          name: "version",
          type: "string",
        },
        {
          internalType: "uint256",
          name: "chainId",
          type: "uint256",
        },
        {
          internalType: "address",
          name: "verifyingContract",
          type: "address",
        },
        {
          internalType: "bytes32",
          name: "salt",
          type: "bytes32",
        },
        {
          internalType: "uint256[]",
          name: "extensions",
          type: "uint256[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "initialOwner",
          type: "address",
        },
      ],
      name: "initialize",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "amount",
          type: "uint256",
        },
      ],
      name: "mint",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "name",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address",
        },
      ],
      name: "nonces",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "owner",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          internalType: "address",
          name: "spender",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "value",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "deadline",
          type: "uint256",
        },
        {
          internalType: "uint8",
          name: "v",
          type: "uint8",
        },
        {
          internalType: "bytes32",
          name: "r",
          type: "bytes32",
        },
        {
          internalType: "bytes32",
          name: "s",
          type: "bytes32",
        },
      ],
      name: "permit",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "proxiableUUID",
      outputs: [
        {
          internalType: "bytes32",
          name: "",
          type: "bytes32",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "renounceOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "symbol",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "totalSupply",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "value",
          type: "uint256",
        },
      ],
      name: "transfer",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "value",
          type: "uint256",
        },
      ],
      name: "transferFrom",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "newOwner",
          type: "address",
        },
      ],
      name: "transferOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "newImplementation",
          type: "address",
        },
        {
          internalType: "bytes",
          name: "data",
          type: "bytes",
        },
      ],
      name: "upgradeToAndCall",
      outputs: [],
      stateMutability: "payable",
      type: "function",
    },
  ],
  bytecode: {
    object:
      "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051611c9b6100fd60003960008181610c3a01528181610c630152610da40152611c9b6000f3fe6080604052600436106101405760003560e01c8063715018a6116100b6578063a9059cbb1161006f578063a9059cbb14610392578063ad3cb1cc146103b2578063c4d66de8146103e3578063d505accf14610403578063dd62ed3e14610423578063f2fde38b1461044357600080fd5b8063715018a6146102b957806379cc6790146102ce5780637ecebe00146102ee57806384b0196e1461030e5780638da5cb5b1461033657806395d89b411461037d57600080fd5b80633644e515116101085780633644e5151461021a57806340c10f191461022f57806342966c68146102515780634f1ef2861461027157806352d1902d1461028457806370a082311461029957600080fd5b806306fdde0314610145578063095ea7b31461017057806318160ddd146101a057806323b872dd146101de578063313ce567146101fe575b600080fd5b34801561015157600080fd5b5061015a610463565b604051610167919061177c565b60405180910390f35b34801561017c57600080fd5b5061019061018b3660046117ab565b61050c565b6040519015158152602001610167565b3480156101ac57600080fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b604051908152602001610167565b3480156101ea57600080fd5b506101906101f93660046117d5565b610526565b34801561020a57600080fd5b5060405160128152602001610167565b34801561022657600080fd5b506101d061054c565b34801561023b57600080fd5b5061024f61024a3660046117ab565b61055b565b005b34801561025d57600080fd5b5061024f61026c366004611811565b610571565b61024f61027f366004611840565b61057e565b34801561029057600080fd5b506101d0610599565b3480156102a557600080fd5b506101d06102b4366004611902565b6105b6565b3480156102c557600080fd5b5061024f6105e9565b3480156102da57600080fd5b5061024f6102e93660046117ab565b6105fd565b3480156102fa57600080fd5b506101d0610309366004611902565b610612565b34801561031a57600080fd5b5061032361061d565b604051610167979695949392919061191d565b34801561034257600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610167565b34801561038957600080fd5b5061015a6106ce565b34801561039e57600080fd5b506101906103ad3660046117ab565b61070d565b3480156103be57600080fd5b5061015a604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156103ef57600080fd5b5061024f6103fe366004611902565b61071b565b34801561040f57600080fd5b5061024f61041e3660046119b3565b6108a9565b34801561042f57600080fd5b506101d061043e366004611a26565b610a02565b34801561044f57600080fd5b5061024f61045e366004611902565b610a4c565b60606000600080516020611c068339815191525b905080600301805461048890611a59565b80601f01602080910402602001604051908101604052809291908181526020018280546104b490611a59565b80156105015780601f106104d657610100808354040283529160200191610501565b820191906000526020600020905b8154815290600101906020018083116104e457829003601f168201915b505050505091505090565b60003361051a818585610a87565b60019150505b92915050565b600033610534858285610a99565b61053f858585610aff565b60019150505b9392505050565b6000610556610b5e565b905090565b610563610b68565b61056d8282610bc3565b5050565b61057b3382610bf9565b50565b610586610c2f565b61058f82610cd4565b61056d8282610cdc565b60006105a3610d99565b50600080516020611c4683398151915290565b600080600080516020611c068339815191525b6001600160a01b0390931660009081526020939093525050604090205490565b6105f1610b68565b6105fb6000610de2565b565b610608823383610a99565b61056d8282610bf9565b600061052082610e53565b60006060808280808381600080516020611c26833981519152805490915015801561064a57506001810154155b6106935760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b60448201526064015b60405180910390fd5b61069b610e7c565b6106a3610ebb565b60408051600080825260208201909252600f60f81b9c939b5091995046985030975095509350915050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace048054606091600080516020611c068339815191529161048890611a59565b60003361051a818585610aff565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156107615750825b905060008267ffffffffffffffff16600114801561077e5750303b155b90508115801561078c575080155b156107aa5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156107d457845460ff60401b1916600160401b1785555b61081960405180604001604052806008815260200167466f6d6f706f6c7960c01b815250604051806040016040528060038152602001620464d560ec1b815250610ed3565b610821610ee5565b61082a86610eed565b61085360405180604001604052806008815260200167466f6d6f706f6c7960c01b815250610efe565b61085b610ee5565b83156108a157845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b834211156108cd5760405163313c898160e11b81526004810185905260240161068a565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109398c6001600160a01b031660009081527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061099482610f29565b905060006109a482878787610f56565b9050896001600160a01b0316816001600160a01b0316146109eb576040516325c0072360e11b81526001600160a01b0380831660048301528b16602482015260440161068a565b6109f68a8a8a610a87565b50505050505050505050565b6001600160a01b0391821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b610a54610b68565b6001600160a01b038116610a7e57604051631e4fbdf760e01b81526000600482015260240161068a565b61057b81610de2565b610a948383836001610f84565b505050565b6000610aa58484610a02565b90506000198114610af95781811015610aea57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161068a565b610af984848484036000610f84565b50505050565b6001600160a01b038316610b2957604051634b637e8f60e11b81526000600482015260240161068a565b6001600160a01b038216610b535760405163ec442f0560e01b81526000600482015260240161068a565b610a9483838361106c565b60006105566111aa565b33610b9a7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146105fb5760405163118cdaa760e01b815233600482015260240161068a565b6001600160a01b038216610bed5760405163ec442f0560e01b81526000600482015260240161068a565b61056d6000838361106c565b6001600160a01b038216610c2357604051634b637e8f60e11b81526000600482015260240161068a565b61056d8260008361106c565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610cb657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610caa600080516020611c46833981519152546001600160a01b031690565b6001600160a01b031614155b156105fb5760405163703e46dd60e11b815260040160405180910390fd5b61057b610b68565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d36575060408051601f3d908101601f19168201909252610d3391810190611a93565b60015b610d5e57604051634c9c8ce360e01b81526001600160a01b038316600482015260240161068a565b600080516020611c468339815191528114610d8f57604051632a87526960e21b81526004810182905260240161068a565b610a94838361121e565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105fb5760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6000807f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006105c9565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1028054606091600080516020611c268339815191529161048890611a59565b60606000600080516020611c26833981519152610477565b610edb611274565b61056d82826112bd565b6105fb611274565b610ef5611274565b61057b8161130e565b610f06611274565b61057b81604051806040016040528060018152602001603160f81b815250611316565b6000610520610f36610b5e565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080610f6888888888611377565b925092509250610f788282611446565b50909695505050505050565b600080516020611c068339815191526001600160a01b038516610fbd5760405163e602df0560e01b81526000600482015260240161068a565b6001600160a01b038416610fe757604051634a1406b160e11b81526000600482015260240161068a565b6001600160a01b0380861660009081526001830160209081526040808320938816835292905220839055811561106557836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161105c91815260200190565b60405180910390a35b5050505050565b600080516020611c068339815191526001600160a01b0384166110a8578181600201600082825461109d9190611aac565b9091555061111a9050565b6001600160a01b038416600090815260208290526040902054828110156110fb5760405163391434e360e21b81526001600160a01b0386166004820152602481018290526044810184905260640161068a565b6001600160a01b03851660009081526020839052604090209083900390555b6001600160a01b038316611138576002810180548390039055611157565b6001600160a01b03831660009081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161119c91815260200190565b60405180910390a350505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6111d56114ff565b6111dd611569565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b611227826115ad565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561126c57610a948282611612565b61056d611688565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166105fb57604051631afcd79f60e31b815260040160405180910390fd5b6112c5611274565b600080516020611c068339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace036112ff8482611b13565b5060048101610af98382611b13565b610a54611274565b61131e611274565b600080516020611c268339815191527fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1026113588482611b13565b50600381016113678382611b13565b5060008082556001909101555050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156113b2575060009150600390508261143c565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611406573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166114325750600092506001915082905061143c565b9250600091508190505b9450945094915050565b600082600381111561145a5761145a611bd3565b03611463575050565b600182600381111561147757611477611bd3565b036114955760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156114a9576114a9611bd3565b036114ca5760405163fce698f760e01b81526004810182905260240161068a565b60038260038111156114de576114de611bd3565b0361056d576040516335e2f38360e21b81526004810182905260240161068a565b6000600080516020611c2683398151915281611519610e7c565b80519091501561153157805160209091012092915050565b81548015611540579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b6000600080516020611c2683398151915281611583610ebb565b80519091501561159b57805160209091012092915050565b60018201548015611540579392505050565b806001600160a01b03163b6000036115e357604051634c9c8ce360e01b81526001600160a01b038216600482015260240161068a565b600080516020611c4683398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b03168460405161162f9190611be9565b600060405180830381855af49150503d806000811461166a576040519150601f19603f3d011682016040523d82523d6000602084013e61166f565b606091505b509150915061167f8583836116a7565b95945050505050565b34156105fb5760405163b398979f60e01b815260040160405180910390fd5b6060826116bc576116b782611703565b610545565b81511580156116d357506001600160a01b0384163b155b156116fc57604051639996b31560e01b81526001600160a01b038516600482015260240161068a565b5080610545565b8051156117135780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60005b8381101561174757818101518382015260200161172f565b50506000910152565b6000815180845261176881602086016020860161172c565b601f01601f19169290920160200192915050565b6020815260006105456020830184611750565b80356001600160a01b03811681146117a657600080fd5b919050565b600080604083850312156117be57600080fd5b6117c78361178f565b946020939093013593505050565b6000806000606084860312156117ea57600080fd5b6117f38461178f565b92506118016020850161178f565b9150604084013590509250925092565b60006020828403121561182357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561185357600080fd5b61185c8361178f565b9150602083013567ffffffffffffffff8082111561187957600080fd5b818501915085601f83011261188d57600080fd5b81358181111561189f5761189f61182a565b604051601f8201601f19908116603f011681019083821181831017156118c7576118c761182a565b816040528281528860208487010111156118e057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561191457600080fd5b6105458261178f565b60ff60f81b881681526000602060e08184015261193d60e084018a611750565b838103604085015261194f818a611750565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156119a157835183529284019291840191600101611985565b50909c9b505050505050505050505050565b600080600080600080600060e0888a0312156119ce57600080fd5b6119d78861178f565b96506119e56020890161178f565b95506040880135945060608801359350608088013560ff81168114611a0957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611a3957600080fd5b611a428361178f565b9150611a506020840161178f565b90509250929050565b600181811c90821680611a6d57607f821691505b602082108103611a8d57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611aa557600080fd5b5051919050565b8082018082111561052057634e487b7160e01b600052601160045260246000fd5b601f821115610a9457600081815260208120601f850160051c81016020861015611af45750805b601f850160051c820191505b818110156108a157828155600101611b00565b815167ffffffffffffffff811115611b2d57611b2d61182a565b611b4181611b3b8454611a59565b84611acd565b602080601f831160018114611b765760008415611b5e5750858301515b600019600386901b1c1916600185901b1785556108a1565b600085815260208120601f198616915b82811015611ba557888601518255948401946001909101908401611b86565b5085821015611bc35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b60008251611bfb81846020870161172c565b919091019291505056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220c82e73b21e3aca8d1d5cd7b071e4eac729494f6d39026facbb3a25c4805d65a464736f6c63430008150033",
    sourceMap:
      "562:735:52:-:0;;;1171:4:23;1128:48;;766:53:52;;;;;;;;;-1:-1:-1;790:22:52;:20;:22::i;:::-;562:735;;7711:422:22;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:22;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:22;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:22;-1:-1:-1;;;;;8035:33:22;;;;;8087:29;;158:50:62;;;8087:29:22;;146:2:62;131:18;8087:29:22;;;;;;;7981:146;7760:373;7711:422::o;14:200:62:-;562:735:52;;;;;;;;;;;;;;;;;;;;;;",
    linkReferences: {},
  },
  deployedBytecode: {
    object:
      "0x6080604052600436106101405760003560e01c8063715018a6116100b6578063a9059cbb1161006f578063a9059cbb14610392578063ad3cb1cc146103b2578063c4d66de8146103e3578063d505accf14610403578063dd62ed3e14610423578063f2fde38b1461044357600080fd5b8063715018a6146102b957806379cc6790146102ce5780637ecebe00146102ee57806384b0196e1461030e5780638da5cb5b1461033657806395d89b411461037d57600080fd5b80633644e515116101085780633644e5151461021a57806340c10f191461022f57806342966c68146102515780634f1ef2861461027157806352d1902d1461028457806370a082311461029957600080fd5b806306fdde0314610145578063095ea7b31461017057806318160ddd146101a057806323b872dd146101de578063313ce567146101fe575b600080fd5b34801561015157600080fd5b5061015a610463565b604051610167919061177c565b60405180910390f35b34801561017c57600080fd5b5061019061018b3660046117ab565b61050c565b6040519015158152602001610167565b3480156101ac57600080fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b604051908152602001610167565b3480156101ea57600080fd5b506101906101f93660046117d5565b610526565b34801561020a57600080fd5b5060405160128152602001610167565b34801561022657600080fd5b506101d061054c565b34801561023b57600080fd5b5061024f61024a3660046117ab565b61055b565b005b34801561025d57600080fd5b5061024f61026c366004611811565b610571565b61024f61027f366004611840565b61057e565b34801561029057600080fd5b506101d0610599565b3480156102a557600080fd5b506101d06102b4366004611902565b6105b6565b3480156102c557600080fd5b5061024f6105e9565b3480156102da57600080fd5b5061024f6102e93660046117ab565b6105fd565b3480156102fa57600080fd5b506101d0610309366004611902565b610612565b34801561031a57600080fd5b5061032361061d565b604051610167979695949392919061191d565b34801561034257600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610167565b34801561038957600080fd5b5061015a6106ce565b34801561039e57600080fd5b506101906103ad3660046117ab565b61070d565b3480156103be57600080fd5b5061015a604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156103ef57600080fd5b5061024f6103fe366004611902565b61071b565b34801561040f57600080fd5b5061024f61041e3660046119b3565b6108a9565b34801561042f57600080fd5b506101d061043e366004611a26565b610a02565b34801561044f57600080fd5b5061024f61045e366004611902565b610a4c565b60606000600080516020611c068339815191525b905080600301805461048890611a59565b80601f01602080910402602001604051908101604052809291908181526020018280546104b490611a59565b80156105015780601f106104d657610100808354040283529160200191610501565b820191906000526020600020905b8154815290600101906020018083116104e457829003601f168201915b505050505091505090565b60003361051a818585610a87565b60019150505b92915050565b600033610534858285610a99565b61053f858585610aff565b60019150505b9392505050565b6000610556610b5e565b905090565b610563610b68565b61056d8282610bc3565b5050565b61057b3382610bf9565b50565b610586610c2f565b61058f82610cd4565b61056d8282610cdc565b60006105a3610d99565b50600080516020611c4683398151915290565b600080600080516020611c068339815191525b6001600160a01b0390931660009081526020939093525050604090205490565b6105f1610b68565b6105fb6000610de2565b565b610608823383610a99565b61056d8282610bf9565b600061052082610e53565b60006060808280808381600080516020611c26833981519152805490915015801561064a57506001810154155b6106935760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b60448201526064015b60405180910390fd5b61069b610e7c565b6106a3610ebb565b60408051600080825260208201909252600f60f81b9c939b5091995046985030975095509350915050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace048054606091600080516020611c068339815191529161048890611a59565b60003361051a818585610aff565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156107615750825b905060008267ffffffffffffffff16600114801561077e5750303b155b90508115801561078c575080155b156107aa5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156107d457845460ff60401b1916600160401b1785555b61081960405180604001604052806008815260200167466f6d6f706f6c7960c01b815250604051806040016040528060038152602001620464d560ec1b815250610ed3565b610821610ee5565b61082a86610eed565b61085360405180604001604052806008815260200167466f6d6f706f6c7960c01b815250610efe565b61085b610ee5565b83156108a157845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b834211156108cd5760405163313c898160e11b81526004810185905260240161068a565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109398c6001600160a01b031660009081527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061099482610f29565b905060006109a482878787610f56565b9050896001600160a01b0316816001600160a01b0316146109eb576040516325c0072360e11b81526001600160a01b0380831660048301528b16602482015260440161068a565b6109f68a8a8a610a87565b50505050505050505050565b6001600160a01b0391821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b610a54610b68565b6001600160a01b038116610a7e57604051631e4fbdf760e01b81526000600482015260240161068a565b61057b81610de2565b610a948383836001610f84565b505050565b6000610aa58484610a02565b90506000198114610af95781811015610aea57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161068a565b610af984848484036000610f84565b50505050565b6001600160a01b038316610b2957604051634b637e8f60e11b81526000600482015260240161068a565b6001600160a01b038216610b535760405163ec442f0560e01b81526000600482015260240161068a565b610a9483838361106c565b60006105566111aa565b33610b9a7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146105fb5760405163118cdaa760e01b815233600482015260240161068a565b6001600160a01b038216610bed5760405163ec442f0560e01b81526000600482015260240161068a565b61056d6000838361106c565b6001600160a01b038216610c2357604051634b637e8f60e11b81526000600482015260240161068a565b61056d8260008361106c565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610cb657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610caa600080516020611c46833981519152546001600160a01b031690565b6001600160a01b031614155b156105fb5760405163703e46dd60e11b815260040160405180910390fd5b61057b610b68565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d36575060408051601f3d908101601f19168201909252610d3391810190611a93565b60015b610d5e57604051634c9c8ce360e01b81526001600160a01b038316600482015260240161068a565b600080516020611c468339815191528114610d8f57604051632a87526960e21b81526004810182905260240161068a565b610a94838361121e565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105fb5760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6000807f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006105c9565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1028054606091600080516020611c268339815191529161048890611a59565b60606000600080516020611c26833981519152610477565b610edb611274565b61056d82826112bd565b6105fb611274565b610ef5611274565b61057b8161130e565b610f06611274565b61057b81604051806040016040528060018152602001603160f81b815250611316565b6000610520610f36610b5e565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080610f6888888888611377565b925092509250610f788282611446565b50909695505050505050565b600080516020611c068339815191526001600160a01b038516610fbd5760405163e602df0560e01b81526000600482015260240161068a565b6001600160a01b038416610fe757604051634a1406b160e11b81526000600482015260240161068a565b6001600160a01b0380861660009081526001830160209081526040808320938816835292905220839055811561106557836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161105c91815260200190565b60405180910390a35b5050505050565b600080516020611c068339815191526001600160a01b0384166110a8578181600201600082825461109d9190611aac565b9091555061111a9050565b6001600160a01b038416600090815260208290526040902054828110156110fb5760405163391434e360e21b81526001600160a01b0386166004820152602481018290526044810184905260640161068a565b6001600160a01b03851660009081526020839052604090209083900390555b6001600160a01b038316611138576002810180548390039055611157565b6001600160a01b03831660009081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161119c91815260200190565b60405180910390a350505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6111d56114ff565b6111dd611569565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b611227826115ad565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561126c57610a948282611612565b61056d611688565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166105fb57604051631afcd79f60e31b815260040160405180910390fd5b6112c5611274565b600080516020611c068339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace036112ff8482611b13565b5060048101610af98382611b13565b610a54611274565b61131e611274565b600080516020611c268339815191527fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1026113588482611b13565b50600381016113678382611b13565b5060008082556001909101555050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156113b2575060009150600390508261143c565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611406573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166114325750600092506001915082905061143c565b9250600091508190505b9450945094915050565b600082600381111561145a5761145a611bd3565b03611463575050565b600182600381111561147757611477611bd3565b036114955760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156114a9576114a9611bd3565b036114ca5760405163fce698f760e01b81526004810182905260240161068a565b60038260038111156114de576114de611bd3565b0361056d576040516335e2f38360e21b81526004810182905260240161068a565b6000600080516020611c2683398151915281611519610e7c565b80519091501561153157805160209091012092915050565b81548015611540579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b6000600080516020611c2683398151915281611583610ebb565b80519091501561159b57805160209091012092915050565b60018201548015611540579392505050565b806001600160a01b03163b6000036115e357604051634c9c8ce360e01b81526001600160a01b038216600482015260240161068a565b600080516020611c4683398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b03168460405161162f9190611be9565b600060405180830381855af49150503d806000811461166a576040519150601f19603f3d011682016040523d82523d6000602084013e61166f565b606091505b509150915061167f8583836116a7565b95945050505050565b34156105fb5760405163b398979f60e01b815260040160405180910390fd5b6060826116bc576116b782611703565b610545565b81511580156116d357506001600160a01b0384163b155b156116fc57604051639996b31560e01b81526001600160a01b038516600482015260240161068a565b5080610545565b8051156117135780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60005b8381101561174757818101518382015260200161172f565b50506000910152565b6000815180845261176881602086016020860161172c565b601f01601f19169290920160200192915050565b6020815260006105456020830184611750565b80356001600160a01b03811681146117a657600080fd5b919050565b600080604083850312156117be57600080fd5b6117c78361178f565b946020939093013593505050565b6000806000606084860312156117ea57600080fd5b6117f38461178f565b92506118016020850161178f565b9150604084013590509250925092565b60006020828403121561182357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561185357600080fd5b61185c8361178f565b9150602083013567ffffffffffffffff8082111561187957600080fd5b818501915085601f83011261188d57600080fd5b81358181111561189f5761189f61182a565b604051601f8201601f19908116603f011681019083821181831017156118c7576118c761182a565b816040528281528860208487010111156118e057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561191457600080fd5b6105458261178f565b60ff60f81b881681526000602060e08184015261193d60e084018a611750565b838103604085015261194f818a611750565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156119a157835183529284019291840191600101611985565b50909c9b505050505050505050505050565b600080600080600080600060e0888a0312156119ce57600080fd5b6119d78861178f565b96506119e56020890161178f565b95506040880135945060608801359350608088013560ff81168114611a0957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611a3957600080fd5b611a428361178f565b9150611a506020840161178f565b90509250929050565b600181811c90821680611a6d57607f821691505b602082108103611a8d57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611aa557600080fd5b5051919050565b8082018082111561052057634e487b7160e01b600052601160045260246000fd5b601f821115610a9457600081815260208120601f850160051c81016020861015611af45750805b601f850160051c820191505b818110156108a157828155600101611b00565b815167ffffffffffffffff811115611b2d57611b2d61182a565b611b4181611b3b8454611a59565b84611acd565b602080601f831160018114611b765760008415611b5e5750858301515b600019600386901b1c1916600185901b1785556108a1565b600085815260208120601f198616915b82811015611ba557888601518255948401946001909101908401611b86565b5085821015611bc35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b60008251611bfb81846020870161172c565b919091019291505056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220c82e73b21e3aca8d1d5cd7b071e4eac729494f6d39026facbb3a25c4805d65a464736f6c63430008150033",
    sourceMap:
      "562:735:52:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5505:186;;;;;;;;;;-1:-1:-1;5505:186:24;;;;;:::i;:::-;;:::i;:::-;;;1372:14:62;;1365:22;1347:41;;1335:2;1320:18;5505:186:24;1207:187:62;4191:152:24;;;;;;;;;;-1:-1:-1;4322:14:24;;4191:152;;;1545:25:62;;;1533:2;1518:18;4191:152:24;1399:177:62;6251:244:24;;;;;;;;;;-1:-1:-1;6251:244:24;;;;;:::i;:::-;;:::i;4049:82::-;;;;;;;;;;-1:-1:-1;4049:82:24;;4122:2;2056:36:62;;2044:2;2029:18;4049:82:24;1914:184:62;3082:112:26;;;;;;;;;;;;;:::i;1084:93:52:-;;;;;;;;;;-1:-1:-1;1084:93:52;;;;;:::i;:::-;;:::i;:::-;;931:87:25;;;;;;;;;;-1:-1:-1;931:87:25;;;;;:::i;:::-;;:::i;4158:214:23:-;;;;;;:::i;:::-;;:::i;3705:134::-;;;;;;;;;;;;;:::i;4401:171:24:-;;;;;;;;;;-1:-1:-1;4401:171:24;;;;;:::i;:::-;;:::i;3155:101:21:-;;;;;;;;;;;;;:::i;1334:158:25:-;;;;;;;;;;-1:-1:-1;1334:158:25;;;;;:::i;:::-;;:::i;2821:154:26:-;;;;;;;;;;-1:-1:-1;2821:154:26;;;;;:::i;:::-;;:::i;5173:903:29:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;2441:144:21:-;;;;;;;;;;-1:-1:-1;1313:22:21;2570:8;2441:144;;-1:-1:-1;;;;;2570:8:21;;;5203:51:62;;5191:2;5176:18;2441:144:21;5057:203:62;3268:148:24;;;;;;;;;;;;;:::i;4767:178::-;;;;;;;;;;-1:-1:-1;4767:178:24;;;;;:::i;:::-;;:::i;1819:58:23:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:23;;;;;825:253:52;;;;;;;;;;-1:-1:-1;825:253:52;;;;;:::i;:::-;;:::i;2095:672:26:-;;;;;;;;;;-1:-1:-1;2095:672:26;;;;;:::i;:::-;;:::i;5003:195:24:-;;;;;;;;;;-1:-1:-1;5003:195:24;;;;;:::i;:::-;;:::i;3405:215:21:-;;;;;;;;;;-1:-1:-1;3405:215:21;;;;;:::i;:::-;;:::i;3011:144:24:-;3056:13;3081:22;-1:-1:-1;;;;;;;;;;;3106:18:24;3081:43;;3141:1;:7;;3134:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144;:::o;5505:186::-;5578:4;966:10:27;5632:31:24;966:10:27;5648:7:24;5657:5;5632:8;:31::i;:::-;5680:4;5673:11;;;5505:186;;;;;:::o;6251:244::-;6338:4;966:10:27;6394:37:24;6410:4;966:10:27;6425:5:24;6394:15;:37::i;:::-;6441:26;6451:4;6457:2;6461:5;6441:9;:26::i;:::-;6484:4;6477:11;;;6251:244;;;;;;:::o;3082:112:26:-;3141:7;3167:20;:18;:20::i;:::-;3160:27;;3082:112;:::o;1084:93:52:-;2334:13:21;:11;:13::i;:::-;1153:17:52::1;1159:2;1163:6;1153:5;:17::i;:::-;1084:93:::0;;:::o;931:87:25:-;985:26;966:10:27;1005:5:25;985;:26::i;:::-;931:87;:::o;4158:214:23:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;3705:134::-:0;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:23;:::o;4401:171:24:-;4466:7;;-1:-1:-1;;;;;;;;;;;4510:18:24;-1:-1:-1;;;;;4545:20:24;;;:11;:20;;;;;;;;-1:-1:-1;;4545:20:24;;;;;4401:171::o;3155:101:21:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;1334:158:25:-;1409:45;1425:7;966:10:27;1448:5:25;1409:15;:45::i;:::-;1464:21;1470:7;1479:5;1464;:21::i;2821:154:26:-;2923:7;2949:19;2962:5;2949:12;:19::i;5173:903:29:-;5271:13;5298:18;;5271:13;;;5298:18;5271:13;-1:-1:-1;;;;;;;;;;;5777:13:29;;5511:45;;-1:-1:-1;5777:18:29;:43;;;;-1:-1:-1;5799:16:29;;;;:21;5777:43;5769:77;;;;-1:-1:-1;;;5769:77:29;;6815:2:62;5769:77:29;;;6797:21:62;6854:2;6834:18;;;6827:30;-1:-1:-1;;;6873:18:62;;;6866:51;6934:18;;5769:77:29;;;;;;;;;5908:13;:11;:13::i;:::-;5935:16;:14;:16::i;:::-;6043;;;6027:1;6043:16;;;;;;;;;-1:-1:-1;;;5857:212:29;;;-1:-1:-1;5857:212:29;;-1:-1:-1;5965:13:29;;-1:-1:-1;6000:4:29;;-1:-1:-1;6027:1:29;-1:-1:-1;6043:16:29;-1:-1:-1;5857:212:29;-1:-1:-1;;5173:903:29:o;3268:148:24:-;3400:9;3393:16;;3315:13;;-1:-1:-1;;;;;;;;;;;2359:20:24;3393:16;;;:::i;4767:178::-;4836:4;966:10:27;4890:27:24;966:10:27;4907:2:24;4911:5;4890:9;:27::i;825:253:52:-;8870:21:22;4302:15;;-1:-1:-1;;;4302:15:22;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:22;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:22;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:22;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:22;-1:-1:-1;;;5013:22:22;;;4979:67;896:31:52::1;;;;;;;;;;;;;;-1:-1:-1::0;;;896:31:52::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;896:31:52::1;;::::0;:12:::1;:31::i;:::-;937:22;:20;:22::i;:::-;969:28;984:12;969:14;:28::i;:::-;1007:30;;;;;;;;;;;;;;-1:-1:-1::0;;;1007:30:52::1;;::::0;:18:::1;:30::i;:::-;1047:24;:22;:24::i;:::-;5070:14:22::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:22;;;5142:14;;-1:-1:-1;7116:50:62;;5142:14:22;;7104:2:62;7089:18;5142:14:22;;;;;;;5066:101;4092:1081;;;;;825:253:52;:::o;2095:672:26:-;2316:8;2298:15;:26;2294:97;;;2347:33;;-1:-1:-1;;;2347:33:26;;;;;1545:25:62;;;1518:18;;2347:33:26;1399:177:62;2294:97:26;2401:18;1277:95;2460:5;2467:7;2476:5;2483:16;2493:5;-1:-1:-1;;;;;1954:16:28;1597:7;1954:16;;;1005:21;1954:16;;;;;:18;;;;;;;;;1537:452;2483:16:26;2432:78;;;;;;7464:25:62;;;;-1:-1:-1;;;;;7563:15:62;;;7543:18;;;7536:43;7615:15;;;;7595:18;;;7588:43;7647:18;;;7640:34;7690:19;;;7683:35;7734:19;;;7727:35;;;7436:19;;2432:78:26;;;;;;;;;;;;2422:89;;;;;;2401:110;;2522:12;2537:28;2554:10;2537:16;:28::i;:::-;2522:43;;2576:14;2593:28;2607:4;2613:1;2616;2619;2593:13;:28::i;:::-;2576:45;;2645:5;-1:-1:-1;;;;;2635:15:26;:6;-1:-1:-1;;;;;2635:15:26;;2631:88;;2673:35;;-1:-1:-1;;;2673:35:26;;-1:-1:-1;;;;;8003:15:62;;;2673:35:26;;;7985:34:62;8055:15;;8035:18;;;8028:43;7920:18;;2673:35:26;7773:304:62;2631:88:26;2729:31;2738:5;2745:7;2754:5;2729:8;:31::i;:::-;2284:483;;;2095:672;;;;;;;:::o;5003:195:24:-;-1:-1:-1;;;;;5162:20:24;;;5083:7;5162:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;5003:195::o;3405:215:21:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:21;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:21;;3562:1:::1;3534:31;::::0;::::1;5203:51:62::0;5176:18;;3534:31:21::1;5057:203:62::0;3485:91:21::1;3585:28;3604:8;3585:18;:28::i;10264:128:24:-:0;10348:37;10357:5;10364:7;10373:5;10380:4;10348:8;:37::i;:::-;10264:128;;;:::o;11993:477::-;12092:24;12119:25;12129:5;12136:7;12119:9;:25::i;:::-;12092:52;;-1:-1:-1;;12158:16:24;:37;12154:310;;12234:5;12215:16;:24;12211:130;;;12266:60;;-1:-1:-1;;;12266:60:24;;-1:-1:-1;;;;;8302:32:62;;12266:60:24;;;8284:51:62;8351:18;;;8344:34;;;8394:18;;;8387:34;;;8257:18;;12266:60:24;8082:345:62;12211:130:24;12382:57;12391:5;12398:7;12426:5;12407:16;:24;12433:5;12382:8;:57::i;:::-;12082:388;11993:477;;;:::o;6868:300::-;-1:-1:-1;;;;;6951:18:24;;6947:86;;6992:30;;-1:-1:-1;;;6992:30:24;;7019:1;6992:30;;;5203:51:62;5176:18;;6992:30:24;5057:203:62;6947:86:24;-1:-1:-1;;;;;7046:16:24;;7042:86;;7085:32;;-1:-1:-1;;;7085:32:24;;7114:1;7085:32;;;5203:51:62;5176:18;;7085:32:24;5057:203:62;7042:86:24;7137:24;7145:4;7151:2;7155:5;7137:7;:24::i;4015:109:29:-;4068:7;4094:23;:21;:23::i;2658:162:21:-;966:10:27;2717:7:21;1313:22;2570:8;-1:-1:-1;;;;;2570:8:21;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:21;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:21;;966:10:27;2763:40:21;;;5203:51:62;5176:18;;2763:40:21;5057:203:62;8996:208:24;-1:-1:-1;;;;;9066:21:24;;9062:91;;9110:32;;-1:-1:-1;;;9110:32:24;;9139:1;9110:32;;;5203:51:62;5176:18;;9110:32:24;5057:203:62;9062:91:24;9162:35;9178:1;9182:7;9191:5;9162:7;:35::i;9522:206::-;-1:-1:-1;;;;;9592:21:24;;9588:89;;9636:30;;-1:-1:-1;;;9636:30:24;;9663:1;9636:30;;;5203:51:62;5176:18;;9636:30:24;5057:203:62;9588:89:24;9686:35;9694:7;9711:1;9715:5;9686:7;:35::i;4599:312:23:-;4679:4;-1:-1:-1;;;;;4688:6:23;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:23;:32;-1:-1:-1;;;;;;;;;;;2035:53:35;-1:-1:-1;;;;;2035:53:35;;1957:138;4749:32:23;-1:-1:-1;;;;;4749:42:23;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:23;;;;;;;;;;;1183:112:52;2334:13:21;:11;:13::i;6052:538:23:-;6169:17;-1:-1:-1;;;;;6151:50:23;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:23;;;;;;;;-1:-1:-1;;6151:52:23;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:23;;-1:-1:-1;;;;;5221:32:62;;6513:60:23;;;5203:51:62;5176:18;;6513:60:23;5057:203:62;6147:437:23;-1:-1:-1;;;;;;;;;;;6245:40:23;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:23;;;;;1545:25:62;;;1518:18;;6312:34:23;1399:177:62;6241:120:23;6374:54;6404:17;6423:4;6374:29;:54::i;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:23;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:23;;;;;;;;;;;3774:248:21;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:21;;-1:-1:-1;;;;;3941:19:21;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;1259:164:28:-;1319:7;;1005:21;1364:19;886:156;6300:155:29;6441:7;6434:14;;6354:13;;-1:-1:-1;;;;;;;;;;;2839:21:29;6434:14;;;:::i;6682:161::-;6739:13;6764:23;-1:-1:-1;;;;;;;;;;;6790:19:29;2720:156;2577:147:24;6931:20:22;:18;:20::i;:::-;2679:38:24::1;2702:5;2709:7;2679:22;:38::i;666:65:25:-:0;6931:20:22;:18;:20::i;1847:127:21:-;6931:20:22;:18;:20::i;:::-;1929:38:21::1;1954:12;1929:24;:38::i;1829:125:26:-:0;6931:20:22;:18;:20::i;:::-;1913:34:26::1;1937:4;1913:34;;;;;;;;;;;;;-1:-1:-1::0;;;1913:34:26::1;;::::0;:23:::1;:34::i;4946:176:29:-:0;5023:7;5049:66;5082:20;:18;:20::i;:::-;5104:10;3555:4:47;3549:11;-1:-1:-1;;;3573:23:47;;3625:4;3616:14;;3609:39;;;;3677:4;3668:14;;3661:34;3733:4;3718:20;;;3353:401;6803:260:46;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;-1:-1:-1;7047:9:46;;6803:260;-1:-1:-1;;;;;;6803:260:46:o;11224:487:24:-;-1:-1:-1;;;;;;;;;;;;;;;;11389:19:24;;11385:89;;11431:32;;-1:-1:-1;;;11431:32:24;;11460:1;11431:32;;;5203:51:62;5176:18;;11431:32:24;5057:203:62;11385:89:24;-1:-1:-1;;;;;11487:21:24;;11483:90;;11531:31;;-1:-1:-1;;;11531:31:24;;11559:1;11531:31;;;5203:51:62;5176:18;;11531:31:24;5057:203:62;11483:90:24;-1:-1:-1;;;;;11582:20:24;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11629:76;;;;11679:7;-1:-1:-1;;;;;11663:31:24;11672:5;-1:-1:-1;;;;;11663:31:24;;11688:5;11663:31;;;;1545:25:62;;1533:2;1518:18;;1399:177;11663:31:24;;;;;;;;11629:76;11322:389;11224:487;;;;:::o;7483:1170::-;-1:-1:-1;;;;;;;;;;;;;;;;7625:18:24;;7621:546;;7779:5;7761:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7621:546:24;;-1:-1:-1;7621:546:24;;-1:-1:-1;;;;;7837:17:24;;7815:19;7837:17;;;;;;;;;;;7872:19;;;7868:115;;;7918:50;;-1:-1:-1;;;7918:50:24;;-1:-1:-1;;;;;8302:32:62;;7918:50:24;;;8284:51:62;8351:18;;;8344:34;;;8394:18;;;8387:34;;;8257:18;;7918:50:24;8082:345:62;7868:115:24;-1:-1:-1;;;;;8103:17:24;;:11;:17;;;;;;;;;;8123:19;;;;8103:39;;7621:546;-1:-1:-1;;;;;8181:16:24;;8177:429;;8344:14;;;:23;;;;;;;8177:429;;;-1:-1:-1;;;;;8557:15:24;;:11;:15;;;;;;;;;;:24;;;;;;8177:429;8636:2;-1:-1:-1;;;;;8621:25:24;8630:4;-1:-1:-1;;;;;8621:25:24;;8640:5;8621:25;;;;1545::62;;1533:2;1518:18;;1399:177;8621:25:24;;;;;;;;7558:1095;7483:1170;;;:::o;4130:191:29:-;4185:7;2073:95;4243:17;:15;:17::i;:::-;4262:20;:18;:20::i;:::-;4221:92;;;;;;9107:25:62;;;;9148:18;;9141:34;;;;9191:18;;;9184:34;4284:13:29;9234:18:62;;;9227:34;4307:4:29;9277:19:62;;;9270:61;9079:19;;4221:92:29;;;;;;;;;;;;4211:103;;;;;;4204:110;;4130:191;:::o;2779:335:35:-;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:35;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:22:-;8870:21;8560:40;-1:-1:-1;;;8560:40:22;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:22;;;;;;;;;;;2730:216:24;6931:20:22;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2895:7:24;:15:::1;2905:5:::0;2895:7;:15:::1;:::i;:::-;-1:-1:-1::0;2920:9:24::1;::::0;::::1;:19;2932:7:::0;2920:9;:19:::1;:::i;1980:235:21:-:0;6931:20:22;:18;:20::i;3599:330:29:-;6931:20:22;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;3766:7:29;:14:::1;3776:4:::0;3766:7;:14:::1;:::i;:::-;-1:-1:-1::0;3790:10:29::1;::::0;::::1;:20;3803:7:::0;3790:10;:20:::1;:::i;:::-;-1:-1:-1::0;3891:1:29::1;3875:17:::0;;;3902:16:::1;::::0;;::::1;:20:::0;-1:-1:-1;;3599:330:29:o;5140:1530:46:-;5266:7;;;6199:66;6186:79;;6182:164;;;-1:-1:-1;6297:1:46;;-1:-1:-1;6301:30:46;;-1:-1:-1;6333:1:46;6281:54;;6182:164;6457:24;;;6440:14;6457:24;;;;;;;;;11773:25:62;;;11846:4;11834:17;;11814:18;;;11807:45;;;;11868:18;;;11861:34;;;11911:18;;;11904:34;;;6457:24:46;;11745:19:62;;6457:24:46;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6457:24:46;;-1:-1:-1;;6457:24:46;;;-1:-1:-1;;;;;;;6495:20:46;;6491:113;;-1:-1:-1;6547:1:46;;-1:-1:-1;6551:29:46;;-1:-1:-1;6547:1:46;;-1:-1:-1;6531:62:46;;6491:113;6622:6;-1:-1:-1;6630:20:46;;-1:-1:-1;6630:20:46;;-1:-1:-1;5140:1530:46;;;;;;;;;:::o;7196:532::-;7291:20;7282:5;:29;;;;;;;;:::i;:::-;;7278:444;;7196:532;;:::o;7278:444::-;7387:29;7378:5;:38;;;;;;;;:::i;:::-;;7374:348;;7439:23;;-1:-1:-1;;;7439:23:46;;;;;;;;;;;7374:348;7492:35;7483:5;:44;;;;;;;;:::i;:::-;;7479:243;;7550:46;;-1:-1:-1;;;7550:46:46;;;;;1545:25:62;;;1518:18;;7550:46:46;1399:177:62;7479:243:46;7626:30;7617:5;:39;;;;;;;;:::i;:::-;;7613:109;;7679:32;;-1:-1:-1;;;7679:32:46;;;;;1545:25:62;;;1518:18;;7679:32:46;1399:177:62;7058:687:29;7108:7;-1:-1:-1;;;;;;;;;;;7108:7:29;7203:13;:11;:13::i;:::-;7230:18;;7182:34;;-1:-1:-1;7230:22:29;7226:513;;7275:22;;;;;;;;7058:687;-1:-1:-1;;7058:687:29:o;7226:513::-;7572:13;;7603:15;;7599:130;;7645:10;7058:687;-1:-1:-1;;;7058:687:29:o;7599:130::-;7701:13;7694:20;;;;;7058:687;:::o;7966:723::-;8019:7;-1:-1:-1;;;;;;;;;;;8019:7:29;8117:16;:14;:16::i;:::-;8147:21;;8093:40;;-1:-1:-1;8147:25:29;8143:540;;8195:25;;;;;;;;7966:723;-1:-1:-1;;7966:723:29:o;8143:540::-;8507:16;;;;8541:18;;8537:136;;8586:13;7966:723;-1:-1:-1;;;7966:723:29:o;2186:281:35:-;2263:17;-1:-1:-1;;;;;2263:29:35;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:35;;-1:-1:-1;;;;;5221:32:62;;2320:47:35;;;5203:51:62;5176:18;;2320:47:35;5057:203:62;2259:119:35;-1:-1:-1;;;;;;;;;;;2387:73:35;;-1:-1:-1;;;;;;2387:73:35;-1:-1:-1;;;;;2387:73:35;;;;;;;;;;2186:281::o;4106:253:42:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:42;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:42:o;6598:122:35:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:35;;;;;;;;;;;4625:582:42;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:42;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:42;;-1:-1:-1;;;;;5221:32:62;;5121:24:42;;;5203:51:62;5176:18;;5121:24:42;5057:203:62;5041:119:42;-1:-1:-1;5180:10:42;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:42;;;;;;;;;;;14:250:62;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:62;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:62;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:62:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;770:173::-;838:20;;-1:-1:-1;;;;;887:31:62;;877:42;;867:70;;933:1;930;923:12;867:70;770:173;;;:::o;948:254::-;1016:6;1024;1077:2;1065:9;1056:7;1052:23;1048:32;1045:52;;;1093:1;1090;1083:12;1045:52;1116:29;1135:9;1116:29;:::i;:::-;1106:39;1192:2;1177:18;;;;1164:32;;-1:-1:-1;;;948:254:62:o;1581:328::-;1658:6;1666;1674;1727:2;1715:9;1706:7;1702:23;1698:32;1695:52;;;1743:1;1740;1733:12;1695:52;1766:29;1785:9;1766:29;:::i;:::-;1756:39;;1814:38;1848:2;1837:9;1833:18;1814:38;:::i;:::-;1804:48;;1899:2;1888:9;1884:18;1871:32;1861:42;;1581:328;;;;;:::o;2285:180::-;2344:6;2397:2;2385:9;2376:7;2372:23;2368:32;2365:52;;;2413:1;2410;2403:12;2365:52;-1:-1:-1;2436:23:62;;2285:180;-1:-1:-1;2285:180:62:o;2470:127::-;2531:10;2526:3;2522:20;2519:1;2512:31;2562:4;2559:1;2552:15;2586:4;2583:1;2576:15;2602:995;2679:6;2687;2740:2;2728:9;2719:7;2715:23;2711:32;2708:52;;;2756:1;2753;2746:12;2708:52;2779:29;2798:9;2779:29;:::i;:::-;2769:39;;2859:2;2848:9;2844:18;2831:32;2882:18;2923:2;2915:6;2912:14;2909:34;;;2939:1;2936;2929:12;2909:34;2977:6;2966:9;2962:22;2952:32;;3022:7;3015:4;3011:2;3007:13;3003:27;2993:55;;3044:1;3041;3034:12;2993:55;3080:2;3067:16;3102:2;3098;3095:10;3092:36;;;3108:18;;:::i;:::-;3183:2;3177:9;3151:2;3237:13;;-1:-1:-1;;3233:22:62;;;3257:2;3229:31;3225:40;3213:53;;;3281:18;;;3301:22;;;3278:46;3275:72;;;3327:18;;:::i;:::-;3367:10;3363:2;3356:22;3402:2;3394:6;3387:18;3442:7;3437:2;3432;3428;3424:11;3420:20;3417:33;3414:53;;;3463:1;3460;3453:12;3414:53;3519:2;3514;3510;3506:11;3501:2;3493:6;3489:15;3476:46;3564:1;3559:2;3554;3546:6;3542:15;3538:24;3531:35;3585:6;3575:16;;;;;;;2602:995;;;;;:::o;3602:186::-;3661:6;3714:2;3702:9;3693:7;3689:23;3685:32;3682:52;;;3730:1;3727;3720:12;3682:52;3753:29;3772:9;3753:29;:::i;3793:1259::-;4199:3;4194;4190:13;4182:6;4178:26;4167:9;4160:45;4141:4;4224:2;4262:3;4257:2;4246:9;4242:18;4235:31;4289:46;4330:3;4319:9;4315:19;4307:6;4289:46;:::i;:::-;4383:9;4375:6;4371:22;4366:2;4355:9;4351:18;4344:50;4417:33;4443:6;4435;4417:33;:::i;:::-;4481:2;4466:18;;4459:34;;;-1:-1:-1;;;;;4530:32:62;;4524:3;4509:19;;4502:61;4550:3;4579:19;;4572:35;;;4644:22;;;4638:3;4623:19;;4616:51;4716:13;;4738:22;;;4814:15;;;;-1:-1:-1;4776:15:62;;;;-1:-1:-1;4857:169:62;4871:6;4868:1;4865:13;4857:169;;;4932:13;;4920:26;;5001:15;;;;4966:12;;;;4893:1;4886:9;4857:169;;;-1:-1:-1;5043:3:62;;3793:1259;-1:-1:-1;;;;;;;;;;;;3793:1259:62:o;5265:693::-;5376:6;5384;5392;5400;5408;5416;5424;5477:3;5465:9;5456:7;5452:23;5448:33;5445:53;;;5494:1;5491;5484:12;5445:53;5517:29;5536:9;5517:29;:::i;:::-;5507:39;;5565:38;5599:2;5588:9;5584:18;5565:38;:::i;:::-;5555:48;;5650:2;5639:9;5635:18;5622:32;5612:42;;5701:2;5690:9;5686:18;5673:32;5663:42;;5755:3;5744:9;5740:19;5727:33;5800:4;5793:5;5789:16;5782:5;5779:27;5769:55;;5820:1;5817;5810:12;5769:55;5265:693;;;;-1:-1:-1;5265:693:62;;;;5843:5;5895:3;5880:19;;5867:33;;-1:-1:-1;5947:3:62;5932:19;;;5919:33;;5265:693;-1:-1:-1;;5265:693:62:o;5963:260::-;6031:6;6039;6092:2;6080:9;6071:7;6067:23;6063:32;6060:52;;;6108:1;6105;6098:12;6060:52;6131:29;6150:9;6131:29;:::i;:::-;6121:39;;6179:38;6213:2;6202:9;6198:18;6179:38;:::i;:::-;6169:48;;5963:260;;;;;:::o;6228:380::-;6307:1;6303:12;;;;6350;;;6371:61;;6425:4;6417:6;6413:17;6403:27;;6371:61;6478:2;6470:6;6467:14;6447:18;6444:38;6441:161;;6524:10;6519:3;6515:20;6512:1;6505:31;6559:4;6556:1;6549:15;6587:4;6584:1;6577:15;6441:161;;6228:380;;;:::o;8432:184::-;8502:6;8555:2;8543:9;8534:7;8530:23;8526:32;8523:52;;;8571:1;8568;8561:12;8523:52;-1:-1:-1;8594:16:62;;8432:184;-1:-1:-1;8432:184:62:o;8621:222::-;8686:9;;;8707:10;;;8704:133;;;8759:10;8754:3;8750:20;8747:1;8740:31;8794:4;8791:1;8784:15;8822:4;8819:1;8812:15;9468:545;9570:2;9565:3;9562:11;9559:448;;;9606:1;9631:5;9627:2;9620:17;9676:4;9672:2;9662:19;9746:2;9734:10;9730:19;9727:1;9723:27;9717:4;9713:38;9782:4;9770:10;9767:20;9764:47;;;-1:-1:-1;9805:4:62;9764:47;9860:2;9855:3;9851:12;9848:1;9844:20;9838:4;9834:31;9824:41;;9915:82;9933:2;9926:5;9923:13;9915:82;;;9978:17;;;9959:1;9948:13;9915:82;;10189:1352;10315:3;10309:10;10342:18;10334:6;10331:30;10328:56;;;10364:18;;:::i;:::-;10393:97;10483:6;10443:38;10475:4;10469:11;10443:38;:::i;:::-;10437:4;10393:97;:::i;:::-;10545:4;;10609:2;10598:14;;10626:1;10621:663;;;;11328:1;11345:6;11342:89;;;-1:-1:-1;11397:19:62;;;11391:26;11342:89;-1:-1:-1;;10146:1:62;10142:11;;;10138:24;10134:29;10124:40;10170:1;10166:11;;;10121:57;11444:81;;10591:944;;10621:663;9415:1;9408:14;;;9452:4;9439:18;;-1:-1:-1;;10657:20:62;;;10775:236;10789:7;10786:1;10783:14;10775:236;;;10878:19;;;10872:26;10857:42;;10970:27;;;;10938:1;10926:14;;;;10805:19;;10775:236;;;10779:3;11039:6;11030:7;11027:19;11024:201;;;11100:19;;;11094:26;-1:-1:-1;;11183:1:62;11179:14;;;11195:3;11175:24;11171:37;11167:42;11152:58;11137:74;;11024:201;-1:-1:-1;;;;;11271:1:62;11255:14;;;11251:22;11238:36;;-1:-1:-1;10189:1352:62:o;11949:127::-;12010:10;12005:3;12001:20;11998:1;11991:31;12041:4;12038:1;12031:15;12065:4;12062:1;12055:15;12081:287;12210:3;12248:6;12242:13;12264:66;12323:6;12318:3;12311:4;12303:6;12299:17;12264:66;:::i;:::-;12346:16;;;;;12081:287;-1:-1:-1;;12081:287:62:o",
    linkReferences: {},
    immutableReferences: {
      45088: [
        {
          start: 3130,
          length: 32,
        },
        {
          start: 3171,
          length: 32,
        },
        {
          start: 3492,
          length: 32,
        },
      ],
    },
  },
  methodIdentifiers: {
    "DOMAIN_SEPARATOR()": "3644e515",
    "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "decimals()": "313ce567",
    "eip712Domain()": "84b0196e",
    "initialize(address)": "c4d66de8",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "owner()": "8da5cb5b",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "proxiableUUID()": "52d1902d",
    "renounceOwnership()": "715018a6",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.21+commit.d9974bed"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There\'s no code at `target` (it is not a contract)."}],"ECDSAInvalidSignature()":[{"details":"The signature derives the `address(0)`."}],"ECDSAInvalidSignatureLength(uint256)":[{"details":"The signature has an invalid length."}],"ECDSAInvalidSignatureS(bytes32)":[{"details":"The signature has an S value that is in the upper half order."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC2612ExpiredSignature(uint256)":[{"details":"Permit deadline has expired."}],"ERC2612InvalidSigner(address,address)":[{"details":"Mismatched signature."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidAccountNonce(address,uint256)":[{"details":"The nonce used for an `account` is not the expected current nonce."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"EIP712DomainChanged()":{"details":"MAY be emitted to signal that the domain could have changed."},"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(uint256)":{"details":"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."},"burnFrom(address,uint256)":{"details":"Destroys a `value` amount of tokens from `account`, deducting from the caller\'s allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``\'s tokens of at least `value`."},"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it\'s overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"eip712Domain()":{"details":"See {IERC-5267}."},"name()":{"details":"Returns the name of the token."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``\'s nonce by one. This prevents a signature from being used multiple times."},"owner()":{"details":"Returns the address of the current owner."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``\'s tokens, given ``owner``\'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``\'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation\'s compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``\'s tokens of at least `value`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"src/FMP.sol":"FomopolyToken"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",":ds-test/=lib/forge-std/lib/ds-test/src/",":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",":forge-std/=lib/forge-std/src/",":gas_reports /= [\\"*\\"]/",":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",":openzeppelin-contracts/=lib/openzeppelin-contracts/",":solmate/=lib/solmate/src/"]},"sources":{"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol":{"keccak256":"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a","license":"MIT","urls":["bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6","dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"]},"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b","license":"MIT","urls":["bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609","dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"]},"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol":{"keccak256":"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53","license":"MIT","urls":["bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930","dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj"]},"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol":{"keccak256":"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f","license":"MIT","urls":["bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040","dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt"]},"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"keccak256":"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f","license":"MIT","urls":["bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f","dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW"]},"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"keccak256":"0x8a97653aeba40e9f0c2e8df1a1379b29b927b6dc3534040c668e71ad9ae89d88","license":"MIT","urls":["bzz-raw://6e529c294c9d634eb68a1e4aeb66eb8381de5a08ccd2c0bfeebd48a6b28fcff7","dweb:/ipfs/QmWCezuxfZb68nM3Hs6XzQNNiW7VJsymU4sajy2DW1CKbp"]},"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397","license":"MIT","urls":["bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9","dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"]},"lib/openzeppelin-contracts-upgradeable/contracts/utils/NoncesUpgradeable.sol":{"keccak256":"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4","license":"MIT","urls":["bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827","dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn"]},"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol":{"keccak256":"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327","license":"MIT","urls":["bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78","dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx"]},"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol":{"keccak256":"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92","license":"MIT","urls":["bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a","dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"]},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol":{"keccak256":"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c","license":"MIT","urls":["bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9","dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v"]},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7","license":"MIT","urls":["bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f","dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"]},"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol":{"keccak256":"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65","license":"MIT","urls":["bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a","dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE"]},"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c","license":"MIT","urls":["bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa","dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"]},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70","license":"MIT","urls":["bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c","dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"]},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2","license":"MIT","urls":["bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850","dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"]},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff","license":"MIT","urls":["bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d","dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"]},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721","license":"MIT","urls":["bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245","dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"]},"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol":{"keccak256":"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418","license":"MIT","urls":["bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c","dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR"]},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792","license":"MIT","urls":["bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453","dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"]},"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf","license":"MIT","urls":["bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c","dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF"]},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435","license":"MIT","urls":["bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c","dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"]},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d","license":"MIT","urls":["bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875","dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"]},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72","license":"MIT","urls":["bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc","dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"]},"src/FMP.sol":{"keccak256":"0x8bf5a8bb18c38088a6eed7671dc9e2771da7235dfaecfe5848bc264af1f2dcb4","license":"MIT","urls":["bzz-raw://e25364b84b55192c55b074d7d3d20727f7297680d0fd85c91d60e0a33dc933d7","dweb:/ipfs/QmSVDX12n9Jp1o1e3o5FijAvxgneNCPsEoHzUQ5UMydWSr"]}},"version":1}',
  metadata: {
    compiler: {
      version: "0.8.21+commit.d9974bed",
    },
    language: "Solidity",
    output: {
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
          ],
          type: "error",
          name: "AddressEmptyCode",
        },
        {
          inputs: [],
          type: "error",
          name: "ECDSAInvalidSignature",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "length",
              type: "uint256",
            },
          ],
          type: "error",
          name: "ECDSAInvalidSignatureLength",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          type: "error",
          name: "ECDSAInvalidSignatureS",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "implementation",
              type: "address",
            },
          ],
          type: "error",
          name: "ERC1967InvalidImplementation",
        },
        {
          inputs: [],
          type: "error",
          name: "ERC1967NonPayable",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "allowance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          type: "error",
          name: "ERC20InsufficientAllowance",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          type: "error",
          name: "ERC20InsufficientBalance",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "approver",
              type: "address",
            },
          ],
          type: "error",
          name: "ERC20InvalidApprover",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
          ],
          type: "error",
          name: "ERC20InvalidReceiver",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          type: "error",
          name: "ERC20InvalidSender",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          type: "error",
          name: "ERC20InvalidSpender",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "deadline",
              type: "uint256",
            },
          ],
          type: "error",
          name: "ERC2612ExpiredSignature",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "signer",
              type: "address",
            },
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          type: "error",
          name: "ERC2612InvalidSigner",
        },
        {
          inputs: [],
          type: "error",
          name: "FailedInnerCall",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "currentNonce",
              type: "uint256",
            },
          ],
          type: "error",
          name: "InvalidAccountNonce",
        },
        {
          inputs: [],
          type: "error",
          name: "InvalidInitialization",
        },
        {
          inputs: [],
          type: "error",
          name: "NotInitializing",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          type: "error",
          name: "OwnableInvalidOwner",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          type: "error",
          name: "OwnableUnauthorizedAccount",
        },
        {
          inputs: [],
          type: "error",
          name: "UUPSUnauthorizedCallContext",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "slot",
              type: "bytes32",
            },
          ],
          type: "error",
          name: "UUPSUnsupportedProxiableUUID",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
              indexed: true,
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "Approval",
          anonymous: false,
        },
        {
          inputs: [],
          type: "event",
          name: "EIP712DomainChanged",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "version",
              type: "uint64",
              indexed: false,
            },
          ],
          type: "event",
          name: "Initialized",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "previousOwner",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
              indexed: true,
            },
          ],
          type: "event",
          name: "OwnershipTransferred",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
              indexed: true,
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "Transfer",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "implementation",
              type: "address",
              indexed: true,
            },
          ],
          type: "event",
          name: "Upgraded",
          anonymous: false,
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "DOMAIN_SEPARATOR",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "UPGRADE_INTERFACE_VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "burn",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "burnFrom",
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "eip712Domain",
          outputs: [
            {
              internalType: "bytes1",
              name: "fields",
              type: "bytes1",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "verifyingContract",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
            {
              internalType: "uint256[]",
              name: "extensions",
              type: "uint256[]",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "initialOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "initialize",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "mint",
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "nonces",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "deadline",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "permit",
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "proxiableUUID",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "function",
          name: "renounceOwnership",
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "transferOwnership",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newImplementation",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          stateMutability: "payable",
          type: "function",
          name: "upgradeToAndCall",
        },
      ],
      devdoc: {
        kind: "dev",
        methods: {
          "DOMAIN_SEPARATOR()": {
            details:
              "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.",
          },
          "allowance(address,address)": {
            details: "See {IERC20-allowance}.",
          },
          "approve(address,uint256)": {
            details:
              "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.",
          },
          "balanceOf(address)": {
            details: "See {IERC20-balanceOf}.",
          },
          "burn(uint256)": {
            details:
              "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.",
          },
          "burnFrom(address,uint256)": {
            details:
              "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.",
          },
          constructor: {
            "custom:oz-upgrades-unsafe-allow": "constructor",
          },
          "decimals()": {
            details:
              "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.",
          },
          "eip712Domain()": {
            details: "See {IERC-5267}.",
          },
          "name()": {
            details: "Returns the name of the token.",
          },
          "nonces(address)": {
            details:
              "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.",
          },
          "owner()": {
            details: "Returns the address of the current owner.",
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            details:
              "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.",
          },
          "proxiableUUID()": {
            details:
              "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.",
          },
          "renounceOwnership()": {
            details:
              "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.",
          },
          "symbol()": {
            details:
              "Returns the symbol of the token, usually a shorter version of the name.",
          },
          "totalSupply()": {
            details: "See {IERC20-totalSupply}.",
          },
          "transfer(address,uint256)": {
            details:
              "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.",
          },
          "transferFrom(address,address,uint256)": {
            details:
              "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.",
          },
          "transferOwnership(address)": {
            details:
              "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            details:
              "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.",
          },
        },
        version: 1,
      },
      userdoc: {
        kind: "user",
        methods: {},
        version: 1,
      },
    },
    settings: {
      remappings: [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        'gas_reports /= ["*"]/',
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "solmate/=lib/solmate/src/",
      ],
      optimizer: {
        enabled: true,
        runs: 200,
      },
      metadata: {
        bytecodeHash: "ipfs",
      },
      compilationTarget: {
        "src/FMP.sol": "FomopolyToken",
      },
      libraries: {},
    },
    sources: {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol":
        {
          keccak256:
            "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
          urls: [
            "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
            "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":
        {
          keccak256:
            "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
          urls: [
            "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
            "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol":
        {
          keccak256:
            "0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53",
          urls: [
            "bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930",
            "dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol":
        {
          keccak256:
            "0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f",
          urls: [
            "bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040",
            "dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":
        {
          keccak256:
            "0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f",
          urls: [
            "bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f",
            "dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol":
        {
          keccak256:
            "0x8a97653aeba40e9f0c2e8df1a1379b29b927b6dc3534040c668e71ad9ae89d88",
          urls: [
            "bzz-raw://6e529c294c9d634eb68a1e4aeb66eb8381de5a08ccd2c0bfeebd48a6b28fcff7",
            "dweb:/ipfs/QmWCezuxfZb68nM3Hs6XzQNNiW7VJsymU4sajy2DW1CKbp",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":
        {
          keccak256:
            "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
          urls: [
            "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
            "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/NoncesUpgradeable.sol":
        {
          keccak256:
            "0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4",
          urls: [
            "bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827",
            "dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol":
        {
          keccak256:
            "0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327",
          urls: [
            "bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78",
            "dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
        keccak256:
          "0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92",
        urls: [
          "bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a",
          "dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        keccak256:
          "0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c",
        urls: [
          "bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9",
          "dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        keccak256:
          "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        urls: [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        keccak256:
          "0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65",
        urls: [
          "bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a",
          "dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        keccak256:
          "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        urls: [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        keccak256:
          "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        urls: [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":
        {
          keccak256:
            "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
          urls: [
            "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
            "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":
        {
          keccak256:
            "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
          urls: [
            "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
            "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        keccak256:
          "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        urls: [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        keccak256:
          "0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418",
        urls: [
          "bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c",
          "dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        keccak256:
          "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        urls: [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        keccak256:
          "0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf",
        urls: [
          "bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c",
          "dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":
        {
          keccak256:
            "0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435",
          urls: [
            "bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c",
            "dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        keccak256:
          "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        urls: [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        keccak256:
          "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        urls: [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT",
        ],
        license: "MIT",
      },
      "src/FMP.sol": {
        keccak256:
          "0x8bf5a8bb18c38088a6eed7671dc9e2771da7235dfaecfe5848bc264af1f2dcb4",
        urls: [
          "bzz-raw://e25364b84b55192c55b074d7d3d20727f7297680d0fd85c91d60e0a33dc933d7",
          "dweb:/ipfs/QmSVDX12n9Jp1o1e3o5FijAvxgneNCPsEoHzUQ5UMydWSr",
        ],
        license: "MIT",
      },
    },
    version: 1,
  },
  ast: {
    absolutePath: "src/FMP.sol",
    id: 50410,
    exportedSymbols: {
      ContextUpgradeable: [46144],
      ECDSA: [48850],
      EIP712Upgradeable: [46599],
      ERC1967Utils: [47153],
      ERC20BurnableUpgradeable: [45929],
      ERC20PermitUpgradeable: [46098],
      ERC20Upgradeable: [45867],
      FomopolyToken: [50409],
      IERC1822Proxiable: [46634],
      IERC20: [47792],
      IERC20Errors: [46676],
      IERC20Metadata: [47818],
      IERC20Permit: [47854],
      Initializable: [45068],
      NoncesUpgradeable: [46255],
      OwnableUpgradeable: [44814],
      UUPSUpgradeable: [45250],
    },
    nodeType: "SourceUnit",
    src: "32:1266:52",
    nodes: [
      {
        id: 50331,
        nodeType: "PragmaDirective",
        src: "32:24:52",
        nodes: [],
        literals: ["solidity", "^", "0.8", ".20"],
      },
      {
        id: 50332,
        nodeType: "ImportDirective",
        src: "58:78:52",
        nodes: [],
        absolutePath:
          "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        file: "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        nameLocation: "-1:-1:-1",
        scope: 50410,
        sourceUnit: 45868,
        symbolAliases: [],
        unitAlias: "",
      },
      {
        id: 50333,
        nodeType: "ImportDirective",
        src: "137:97:52",
        nodes: [],
        absolutePath:
          "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        file: "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        nameLocation: "-1:-1:-1",
        scope: 50410,
        sourceUnit: 45930,
        symbolAliases: [],
        unitAlias: "",
      },
      {
        id: 50334,
        nodeType: "ImportDirective",
        src: "235:75:52",
        nodes: [],
        absolutePath:
          "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        file: "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        nameLocation: "-1:-1:-1",
        scope: 50410,
        sourceUnit: 44815,
        symbolAliases: [],
        unitAlias: "",
      },
      {
        id: 50335,
        nodeType: "ImportDirective",
        src: "311:95:52",
        nodes: [],
        absolutePath:
          "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol",
        file: "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol",
        nameLocation: "-1:-1:-1",
        scope: 50410,
        sourceUnit: 46099,
        symbolAliases: [],
        unitAlias: "",
      },
      {
        id: 50336,
        nodeType: "ImportDirective",
        src: "407:75:52",
        nodes: [],
        absolutePath:
          "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        file: "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        nameLocation: "-1:-1:-1",
        scope: 50410,
        sourceUnit: 45069,
        symbolAliases: [],
        unitAlias: "",
      },
      {
        id: 50337,
        nodeType: "ImportDirective",
        src: "483:77:52",
        nodes: [],
        absolutePath:
          "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        file: "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        nameLocation: "-1:-1:-1",
        scope: 50410,
        sourceUnit: 45251,
        symbolAliases: [],
        unitAlias: "",
      },
      {
        id: 50409,
        nodeType: "ContractDefinition",
        src: "562:735:52",
        nodes: [
          {
            id: 50357,
            nodeType: "FunctionDefinition",
            src: "766:53:52",
            nodes: [],
            body: {
              id: 50356,
              nodeType: "Block",
              src: "780:39:52",
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 50353,
                      name: "_disableInitializers",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 45036,
                      src: "790:20:52",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$__$returns$__$",
                        typeString: "function ()",
                      },
                    },
                    id: 50354,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "790:22:52",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 50355,
                  nodeType: "ExpressionStatement",
                  src: "790:22:52",
                },
              ],
            },
            documentation: {
              id: 50350,
              nodeType: "StructuredDocumentation",
              src: "713:48:52",
              text: "@custom:oz-upgrades-unsafe-allow constructor",
            },
            implemented: true,
            kind: "constructor",
            modifiers: [],
            name: "",
            nameLocation: "-1:-1:-1",
            parameters: {
              id: 50351,
              nodeType: "ParameterList",
              parameters: [],
              src: "777:2:52",
            },
            returnParameters: {
              id: 50352,
              nodeType: "ParameterList",
              parameters: [],
              src: "780:0:52",
            },
            scope: 50409,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            id: 50384,
            nodeType: "FunctionDefinition",
            src: "825:253:52",
            nodes: [],
            body: {
              id: 50383,
              nodeType: "Block",
              src: "886:192:52",
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: "466f6d6f706f6c79",
                        id: 50365,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "909:10:52",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_a85687a9faca881fa77126cec53ee9d480657170c6a45829dfc4578abdf477a9",
                          typeString: 'literal_string "Fomopoly"',
                        },
                        value: "Fomopoly",
                      },
                      {
                        hexValue: "464d50",
                        id: 50366,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "921:5:52",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_d9867d7903ef15c4474e003cbacb3d0ededdc93654ab96941385d4272771e356",
                          typeString: 'literal_string "FMP"',
                        },
                        value: "FMP",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_stringliteral_a85687a9faca881fa77126cec53ee9d480657170c6a45829dfc4578abdf477a9",
                          typeString: 'literal_string "Fomopoly"',
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_d9867d7903ef15c4474e003cbacb3d0ededdc93654ab96941385d4272771e356",
                          typeString: 'literal_string "FMP"',
                        },
                      ],
                      id: 50364,
                      name: "__ERC20_init",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 45318,
                      src: "896:12:52",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (string memory,string memory)",
                      },
                    },
                    id: 50367,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "896:31:52",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 50368,
                  nodeType: "ExpressionStatement",
                  src: "896:31:52",
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 50369,
                      name: "__ERC20Burnable_init",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 45888,
                      src: "937:20:52",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$__$returns$__$",
                        typeString: "function ()",
                      },
                    },
                    id: 50370,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "937:22:52",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 50371,
                  nodeType: "ExpressionStatement",
                  src: "937:22:52",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 50373,
                        name: "initialOwner",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 50359,
                        src: "984:12:52",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      id: 50372,
                      name: "__Ownable_init",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 44674,
                      src: "969:14:52",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$returns$__$",
                        typeString: "function (address)",
                      },
                    },
                    id: 50374,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "969:28:52",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 50375,
                  nodeType: "ExpressionStatement",
                  src: "969:28:52",
                },
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: "466f6d6f706f6c79",
                        id: 50377,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "1026:10:52",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_a85687a9faca881fa77126cec53ee9d480657170c6a45829dfc4578abdf477a9",
                          typeString: 'literal_string "Fomopoly"',
                        },
                        value: "Fomopoly",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_stringliteral_a85687a9faca881fa77126cec53ee9d480657170c6a45829dfc4578abdf477a9",
                          typeString: 'literal_string "Fomopoly"',
                        },
                      ],
                      id: 50376,
                      name: "__ERC20Permit_init",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 45985,
                      src: "1007:18:52",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (string memory)",
                      },
                    },
                    id: 50378,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1007:30:52",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 50379,
                  nodeType: "ExpressionStatement",
                  src: "1007:30:52",
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 50380,
                      name: "__UUPSUpgradeable_init",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 45122,
                      src: "1047:22:52",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$__$returns$__$",
                        typeString: "function ()",
                      },
                    },
                    id: 50381,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1047:24:52",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 50382,
                  nodeType: "ExpressionStatement",
                  src: "1047:24:52",
                },
              ],
            },
            functionSelector: "c4d66de8",
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 50362,
                kind: "modifierInvocation",
                modifierName: {
                  id: 50361,
                  name: "initializer",
                  nameLocations: ["867:11:52"],
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 44922,
                  src: "867:11:52",
                },
                nodeType: "ModifierInvocation",
                src: "867:11:52",
              },
            ],
            name: "initialize",
            nameLocation: "834:10:52",
            parameters: {
              id: 50360,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 50359,
                  mutability: "mutable",
                  name: "initialOwner",
                  nameLocation: "853:12:52",
                  nodeType: "VariableDeclaration",
                  scope: 50384,
                  src: "845:20:52",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 50358,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "845:7:52",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "844:22:52",
            },
            returnParameters: {
              id: 50363,
              nodeType: "ParameterList",
              parameters: [],
              src: "886:0:52",
            },
            scope: 50409,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            id: 50399,
            nodeType: "FunctionDefinition",
            src: "1084:93:52",
            nodes: [],
            body: {
              id: 50398,
              nodeType: "Block",
              src: "1143:34:52",
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 50394,
                        name: "to",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 50386,
                        src: "1159:2:52",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 50395,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 50388,
                        src: "1163:6:52",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 50393,
                      name: "_mint",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 45699,
                      src: "1153:5:52",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256)",
                      },
                    },
                    id: 50396,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1153:17:52",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 50397,
                  nodeType: "ExpressionStatement",
                  src: "1153:17:52",
                },
              ],
            },
            functionSelector: "40c10f19",
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 50391,
                kind: "modifierInvocation",
                modifierName: {
                  id: 50390,
                  name: "onlyOwner",
                  nameLocations: ["1133:9:52"],
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 44709,
                  src: "1133:9:52",
                },
                nodeType: "ModifierInvocation",
                src: "1133:9:52",
              },
            ],
            name: "mint",
            nameLocation: "1093:4:52",
            parameters: {
              id: 50389,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 50386,
                  mutability: "mutable",
                  name: "to",
                  nameLocation: "1106:2:52",
                  nodeType: "VariableDeclaration",
                  scope: 50399,
                  src: "1098:10:52",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 50385,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1098:7:52",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 50388,
                  mutability: "mutable",
                  name: "amount",
                  nameLocation: "1118:6:52",
                  nodeType: "VariableDeclaration",
                  scope: 50399,
                  src: "1110:14:52",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 50387,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1110:7:52",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1097:28:52",
            },
            returnParameters: {
              id: 50392,
              nodeType: "ParameterList",
              parameters: [],
              src: "1143:0:52",
            },
            scope: 50409,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            id: 50408,
            nodeType: "FunctionDefinition",
            src: "1183:112:52",
            nodes: [],
            body: {
              id: 50407,
              nodeType: "Block",
              src: "1293:2:52",
              nodes: [],
              statements: [],
            },
            baseFunctions: [45204],
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 50404,
                kind: "modifierInvocation",
                modifierName: {
                  id: 50403,
                  name: "onlyOwner",
                  nameLocations: ["1262:9:52"],
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 44709,
                  src: "1262:9:52",
                },
                nodeType: "ModifierInvocation",
                src: "1262:9:52",
              },
            ],
            name: "_authorizeUpgrade",
            nameLocation: "1192:17:52",
            overrides: {
              id: 50405,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "1280:8:52",
            },
            parameters: {
              id: 50402,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 50401,
                  mutability: "mutable",
                  name: "newImplementation",
                  nameLocation: "1218:17:52",
                  nodeType: "VariableDeclaration",
                  scope: 50408,
                  src: "1210:25:52",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 50400,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1210:7:52",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1209:27:52",
            },
            returnParameters: {
              id: 50406,
              nodeType: "ParameterList",
              parameters: [],
              src: "1293:0:52",
            },
            scope: 50409,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "internal",
          },
        ],
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 50338,
              name: "Initializable",
              nameLocations: ["588:13:52"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 45068,
              src: "588:13:52",
            },
            id: 50339,
            nodeType: "InheritanceSpecifier",
            src: "588:13:52",
          },
          {
            baseName: {
              id: 50340,
              name: "ERC20Upgradeable",
              nameLocations: ["603:16:52"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 45867,
              src: "603:16:52",
            },
            id: 50341,
            nodeType: "InheritanceSpecifier",
            src: "603:16:52",
          },
          {
            baseName: {
              id: 50342,
              name: "ERC20BurnableUpgradeable",
              nameLocations: ["621:24:52"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 45929,
              src: "621:24:52",
            },
            id: 50343,
            nodeType: "InheritanceSpecifier",
            src: "621:24:52",
          },
          {
            baseName: {
              id: 50344,
              name: "OwnableUpgradeable",
              nameLocations: ["647:18:52"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 44814,
              src: "647:18:52",
            },
            id: 50345,
            nodeType: "InheritanceSpecifier",
            src: "647:18:52",
          },
          {
            baseName: {
              id: 50346,
              name: "ERC20PermitUpgradeable",
              nameLocations: ["667:22:52"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 46098,
              src: "667:22:52",
            },
            id: 50347,
            nodeType: "InheritanceSpecifier",
            src: "667:22:52",
          },
          {
            baseName: {
              id: 50348,
              name: "UUPSUpgradeable",
              nameLocations: ["691:15:52"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 45250,
              src: "691:15:52",
            },
            id: 50349,
            nodeType: "InheritanceSpecifier",
            src: "691:15:52",
          },
        ],
        canonicalName: "FomopolyToken",
        contractDependencies: [],
        contractKind: "contract",
        fullyImplemented: true,
        linearizedBaseContracts: [
          50409, 45250, 46634, 46098, 46255, 46599, 46624, 47854, 44814, 45929,
          45867, 46676, 47818, 47792, 46144, 45068,
        ],
        name: "FomopolyToken",
        nameLocation: "571:13:52",
        scope: 50410,
        usedErrors: [
          44650, 44655, 44831, 44834, 45095, 45100, 45964, 45971, 46158, 46646,
          46651, 46656, 46665, 46670, 46675, 46885, 46898, 47867, 47870, 48513,
          48518, 48523,
        ],
        usedEvents: [44661, 44839, 46604, 46864, 47726, 47735],
      },
    ],
    license: "MIT",
  },
  id: 52,
};
